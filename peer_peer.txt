
eval()
---------------------------------DAY 5------------------------------------------------
day 5


1) l = [1,2,3,4,5]

i need to get elements in this order [4,3,2]

use slicing to get the same?
l[1:4][::-1]

2) write a function which returns a list. fcuntion should take argument which will appedn to a list and return the list -> f(*args)

f(1) -> [1]
f('no) -> [1, 'no']
f(3) -> [1,'no',3]


def f (val, lst = []):
    lst.append(val)
    return lst







3) x = 'a','b'
y = ('a','b')

what will be the output of print (x==y) ?


4) d = [(4,5) ,(2,3),(6,7)]

4 5 6
2 3 6 4
6 7 2
3 7 5

[j for i,j in d]

write a list comprehension which will return a list whose sum is equal to 15?


5) t = ('hi','hello','bye')

lst = [1,2,3,4,5,6,7,8,9]

what will this do t * (lst.len() - sum(lst[:4]) + 1)
()

6) t = ('jaanu baby') * 7

print (type(t))
string

7) d = {(1,2):1 , (2,1):2}
d[1,2] what will be output of this?
1

8) d= {1:'a', 1.0 :'b'}

print (d)

{1:'b'}

print(type(list(d.keys())[0]))	int

9) t = ('jaanu baby',) * 7

print (type(t))
tuple
print (t)
('jaanu baby', 'jaanu baby'...)

10) d = {1.0:'a', 1:'b'}
print (d)
{1.0:'b'}

print(type(list(d.keys())[0])	float

-----------------------------------------------------------------------------------


------------------------------ DAY 6 ----------------------------------------

1) [('a',89),('b',90),('c',91),('c',92)] merge all the keys to form a list a value
o/p {'a':[89], 'b':[90], 'c':[91,92]}

d= {}
for k,v in lst:
    if k not in d:
        d[k] = [v]
    else:
        d[k] = d[k] +[v] work iyindha?
        but in any case you can use defaultdict for inistization
        d = defaultdict(list)

2) convert the string "srinaveen" to "Desu Srinaveen Mr" without using string operations

print ('Desu ' + 'srinaveen' + 'Mr'  )b -> no string operations

hint: can you it using deque -> but i don have 'desu' and 'mr' kada??
  okay you have something called appendleft() in deque which will append to the left of the list and "extend()" to the right -> i din know this
ohh i can use 'desu '  and 'mr' ah.. haan

1) s = {1,2,3,4,5,6}
print (s[3]) -> 4  wrong
chusa
sets are unordered and unindexed



2) x = [1,2,3,4,5,6,7,8,9]

single line code to convert it like this -> [(1,2,3),(4,5,6),(7,8,9)]


y =set()
print([y.add(j) for i in range(0,len(x),3) for j in x[i]])

try another way
Soln:

--->  list(zip(*iter(x) *3)) *3?

big explnation:

  iter(X)creates an iterator of the list

  iter(X) *3 gives three iterator objects

  (*) is used to unpack the elements. So effectively our objects will look like following

  [1,2,3,4,5,6,7,8,9]  [1,2,3,4,5,6,7,8,9] [1,2,3,4,5,6,7,8,9] -> using zip on this will be (1,1,1) ....

  since these are iterator objects of same list during each run the zip runs as following
  [1] [2] [3]
  [1,4] [2,5] [3,6]
  [1,4,7] [2,5,8] [3,6,9]
  zipping the last line will givee
  [1,2,3] [4,5,6] [7,8,9]


  try chestha repu
  enti nidra potunava??

  haan :(migita answer cheyuu


3) len(set([1,2,3,4,1,2,3,4])) ->error
wrong answer

answer -> 4

4) l = [[1,2] ,[3,4] ,[5,6],[7,8,9]]
flaten out  this list into [1,2,3,4,5,6] in one line

print([j for i in l for j in i]) -> this is robust re

sum(l,[])


unava?



DOUBTS:

Why set cannot be indexed?

----------------------------------------------------------------------

------------------------ DAY 7 ---------------------------


https://www.datacamp.com/community/tutorials/18-most-common-python-list-questions-learn-python

1) s = {1,2,3,4}
b = {5,6,4,3}

outout -> {1,2,3,4,5,6}


2)





print(*[iter(x)] * 3)
>>> print(zip([iter(x)]*3))
<zip object at 0x104b74b48>

for val in zip([iter(x)] * 3):
    print(val)
    for v in val:
        print(v)
        for i in v:
            print(i)



(<list_iterator object at 0x10c1ad8d0>,)
<list_iterator object at 0x10c1ad8d0>
1
2
3
4
5
6
7
8
9
(<list_iterator object at 0x10c1ad8d0>,) val
<list_iterator object at 0x10c1ad8d0> v
(<list_iterator object at 0x10c1ad8d0>,) val
<list_iterator object at 0x10c1ad8d0> v

>>> for i in zip(*[iter(x)]*3):
...     print(i)
...
(1, 2, 3)
(4, 5, 6)
(7, 8, 9)

for val in zip([1]*3):
    print(val)

for val in zip([1,1,1]):
	 print (val)


(1,)
(1,)
(1,)

print (*[1,1,1])
1 1 1





DOUBTS:

1) Where can a starred expression be used?
2) https://docs.python.org/3/library/functions.html#zip
3) https://docs.python.org/3/whatsnew/3.0.html
4) https://www.python.org/dev/peps/pep-3132/


---------------------------------------------------------------


 ------------------------- DAY 8 -------------------------------------------------


1) print (r'foo\\bar\ndes')
foo\\bar\ndes

2) name = "I am naveen"
o/p: "n ee vanmai"

for i in range(int(name)):
    spc = []
    str1 = str(input())
    print(str1)
    for i in str1:
        if i in string.whitespace:
            spc.append(str1.index(i))
    revstr = ''.join(str1.split())[::-1]
    print(revstr)
    for j in spc:
        print(revstr[:j]+ ' '+revstr[j:])


3) val = b'u r my jaanu'
convert val to string ?
str(val, 'utf-8')


4) how to remove the keys in dictionary?what happens when pop is used in dict?
del d[key]
pop will be used to remove the last inserted key

5) can python tuples have mutable objects? what happens if mutable object is modified? write an example
yes
a = ([1,2], 3, 4)
a[0].append(3)
print(a)
([1,2,3],3,4)

6) what will be o/p of
 l = [1,2,3]
 l.extend([4,5,6])

l = [1,2,3,4,5,6]

l.append([4,5,6])
l = [1,2,3 ,[4,5,6]]

6) a,b = 1,2,3

7) list -> remove() vs pop() ?




---------------------------------------------------------------------------------

 >
---------------------------------- DAY 9 -----------------------------------

1) lst = [1,2,3,4,5,6] -> create a dictionary using the list without using defaultdict

d = {k:0 for k in lst}

d ={}
for k in lst:
    if k not in d.keys():
        d[k] = 0

{}.fromkeys(lst,0)




2) l = [1,2,3]

for val in l:
    if val > 0 and val <-3:
        val = val + 3


 ANS ) 3


3) a = [how for how in l if how > 5 else 33]
print (how)

ANS) val not exist error



4) l = [1,'srilekhya',3]
for l[1] in 'lanka': print(l)

ANS)
[1, 'l', 3]
[1, 'a', 3]
[1, 'n', 3]
[1, 'k', 3]
[1, 'a', 3]

5) cities = {'san frnas': 'US', 'london': 'UK', 'manchester': 'UK', 'LA': 'US'}
o/p {'us':['San frans', 'LA'], 'UK':['london','mancherster']} -> without using dictionary comprehension

d ={}
for k,v in cities.items():
    if v not in d.keys():
        d[v] = [k]
    else:
        d[v] = d[v] + [k]

d.setdefault(cities.keys(),[]).append(
d2 = {}
for k,v in cities.items():
       d2.setdefault(v,[]).append(k))

6) I want to use break statement in a function . how can i do it?
Ans)
def fun(a):
for i in range(10):
	if a < 10:
  	break


6a) how can i write 'break' outside the for loop?
Ans) break is used to exit out of a loop, hence it cannot be used outside a for loop


7)  difference between array and list
https://www.geeksforgeeks.org/array-python-set-1-introduction-functions/
ANS )
Data Types
Introduction to DataTypes
Strings
List
Tuples
Sets
Dictionary
Arrays Set 1, Set 2

8) Difference map,reduce and filter
lst = [1,2,3,4]
map => map(lambda x:x**2,lst)


filter => filter (lambda x:(x%2 ==0), lst)

reduce => reduce (lambda x:x>5,lst)

----------------------------------------------------------------


------------------------------ DAY 10 -----------------------------------------

1) arr = [[1,2,3],[4,5,6],[7,8,9]]
for i in range(0,3):
	print(arr[i].pop())


2)
val = 1.0
if val ==1.0:
    print ('heello lekhya')


output -> heello lekhya

3) val = '1234567890'
print (isintance(id(val), int))

output


4) name = strawberry

what happens when this code is executed?

Nameerror

5) a = "sri","lekhya"
print(type(a))

ans ) tuple


6) print (3*1**3) -> 3


7) print (float('12+34')) -> error


8) print (3^4) -> 7
https://en.wikipedia.org/wiki/XOR_gate

9) a = 1,2
b = (3,4)
[print(sum(x)) for x in [ a + b]]
ans) 10

10) print (float('nan'))
Ans) nan

11) l = [1,2,3]
a = ('naveen') * (l.__len__() - l[::-1][0])
print(a)

Ans) ()

12) print (range(10))

Ans) range(0,10)

13) print(list(range(0,10,0)))
Ans ) Error arg 3 in range cannot be zero

14) print(list(range(0,10,-2)))
Ans) []

15) print(list(range(0,10,15)))
Ans) [0]

16) print(list(range(10,0,1)))
Ans) []


Note:

1) what does range return when called as range(5)?

-------------------------------------------------------------------------------





-----------------------------------DAY 11-----------------------------------------


1) Create a generator which ranges from 10 to 25?
gen = (x for x in range(10,25))
print(next(gen))

2) create a generator for generating odd numbers
gen = (x for x in range(10,25) if x%2 != 0)
print(next(gen))

3) create a generator for generating even numbers
gen = (x for x in range(10,25) if x%2 == 0)
print(next(gen))

4) create a generator which generates alphabets from 'a' to 'z'
def alphabet_gen():
	for i in range(65, 92):
  	yield chr(i)


5) difference between an iterator and an iterable?
?

6) create a iterable using class dunder methods

 class generator:
...     def __init__(self, x):
...             self.x = x
...     def __iter__(self):
...             self.i = 0
...             return self
...     def __next__(self):
...             j = self.i
...             self.i = j+1
...             return j


7) create a generator using yield method
def genmethod():
	for i in range(5):
  	yield i


8) Write code to print only first line of the file without using readline

def r():
		with open(filename, r) as f:
         for line in f:
             yield line
             raise StopIteration


9) Write infinite loop of number that will never die using generator

def g():
	 i = 0
   while True:
       yield i

10) Write generator expression for the square of numbers

gen = (x**2 for x in range(1,10))

11) Difference between generator and iterator
genrator gives an object which is an iterator that can iterate over. uses yield
iterator returns an iterator object . iter()



NOTE:

Iterable vs Iterator vs Generator

-----------------------------------------------------------------
